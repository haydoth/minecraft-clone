#section vertex

#version 330 core
layout (location = 0) in vec3 _Position;
layout (location = 1) in vec2 _TextureCoordinate;
layout (location = 2) in vec3 _Normal;

out vec3 VertexPosition;
out vec2 VertexUV;
out vec3 VertexNormal;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

void main()
{
    gl_Position = 
    projection * view * model *
    vec4(_Position.x, _Position.y, _Position.z, 1.0);

    VertexPosition = _Position;
    VertexUV = _TextureCoordinate;
    VertexNormal = _Normal;
}

#section fragment

#version 330 core

in vec3 VertexPosition;
in vec2 VertexUV;
in vec3 VertexNormal;

uniform vec3 Color;

uniform sampler2D Atlas;

void main()
{
    // hacky lighting
    //vec3 col = vec3(0.4f, 1.0f, 0.1f) * VertexNormal;
    gl_FragColor = vec4(texture(Atlas, VertexUV).rgb * VertexNormal, 1.0f);
    //gl_FragColor = vec4(VertexPosition, 1.0f);
}